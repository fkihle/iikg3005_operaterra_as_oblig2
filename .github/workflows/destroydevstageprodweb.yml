name: Terraform CI/CD - DESTROY

on:
    push:
        paths:
            - '**'
    workflow_dispatch:

env:
    ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
    ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    WORKING_DIR: .

jobs:
    dev_stage:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Terraform Init
              run: terraform init
              working-directory: ${{ env.WORKING_DIR }}

            - name: Terraform workspace select or create dev
              run: terraform workspace select dev || terraform workspace new dev
              working-directory: ${{ env.WORKING_DIR }}

            - name: Terraform Destroy dev
              run: terraform destroy -auto-approve -var="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}"
              working-directory: ${{ env.WORKING_DIR }}


    stage_prod:
        needs: dev_stage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Terraform Init
              run: terraform init
              working-directory: ${{ env.WORKING_DIR }}

            - name: Terraform workspace select or create stage
              run: terraform workspace select stage || terraform workspace new stage
              working-directory: ${{ env.WORKING_DIR }}

            - name: Terraform Destroy stage
              run: terraform destroy -auto-approve -var="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}"
              working-directory: ${{ env.WORKING_DIR }}

    

    prod:
        needs: stage_prod
        runs-on: ubuntu-latest
        environment:
            name: Production
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Terraform Init
              run: terraform init
              working-directory: ${{ env.WORKING_DIR }}

            - name: Terraform workspace select or create prod
              run: terraform workspace select prod || terraform workspace new prod
              working-directory: ${{ env.WORKING_DIR }}

            - name: Terraform Destroy prod
              run: terraform destroy -auto-approve -var="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}"
              working-directory: ${{ env.WORKING_DIR }}

